class Solution {
private:
    int INF = 1e8;
    int d[10000+50];
    int vis[10000+50];

    int dp(vector<int>& coins, int amount){
        if(vis[amount]) return d[amount];

        vis[amount] = 1;
        if(amount == 0){ d[0]= 0; return 0; }

        int res= INF;
        for(int i = 0; i < coins.size(); i++){
            if(amount >= coins[i]){
                res = fmin(res, dp(coins, amount-coins[i])+1);
            }
        }
        return d[amount] = res;
    }
public:
    int coinChange(vector<int>& coins, int amount) {
        memset(d, 0, sizeof(d));
        memset(vis, 0, sizeof(vis));

        dp(coins, amount);
        
        if(d[amount] == INF) return -1;
        else return d[amount];
    }
};
